# A. Meta Info -----------------------

# Task: Treatment Patterns
# Author: [Add Name of Author]
# Date: 2023-04-13
# Description: The purpose of the _treatmentPatterns.R script is to.....

# B. Functions ------------------------


## Treatment Patterns --------------------------


prepSankey <- function(th, minNumPatterns = 30L) {

  treatment_pathways <- th %>%
    tidyr::pivot_wider(id_cols = person_id,
                       names_from = event_seq,
                       names_prefix = "event_cohort_name",
                       values_from = event_cohort_name) %>%
    dplyr::count(dplyr::across(tidyselect::starts_with("event_cohort_name"))) %>%
    dplyr::mutate(End = "end", .before = "n") %>%
    dplyr::filter(n >= minNumPatterns)


  links <- treatment_pathways %>%
    dplyr::mutate(row = dplyr::row_number()) %>%
    tidyr::pivot_longer(cols = c(-row, -n),
                        names_to = 'column', values_to = 'source') %>%
    dplyr::mutate(column = match(column, names(treatment_pathways))) %>%
    tidyr::drop_na(source) %>%
    dplyr::mutate(source = paste0(source, '__', column)) %>%
    dplyr::group_by(row) %>%
    dplyr::mutate(target = dplyr::lead(source, order_by = column)) %>%
    tidyr::drop_na(target, source) %>%
    dplyr::group_by(source, target) %>%
    dplyr::summarise(value = sum(n), .groups = 'drop') %>%
    dplyr::arrange(desc(value))

  nodes <- data.frame(name = unique(c(links$source, links$target)))
  nodes <- data.table::data.table(nodes)
  links <- data.table::data.table(links)
  links$source <- match(links$source, nodes$name) - 1
  links$target <- match(links$target, nodes$name) - 1
  nodes$name <- sub('__[0-9]+$', '', nodes$name)
  links$type <- sub(' .*', '',
                    as.data.frame(nodes)[links$source + 1, 'name'])
  data.table::setkey(links, type)
  data.table::setorder(links, cols = - "value")

  res <- list(
    'treatmentPatterns' = treatment_pathways,
    'links' = links,
    'nodes' = nodes
  )

  return(res)

}


getTreatmentPatterns <- function(executionSettings,
                                 con,
                                 treatmentHistory,
                                 cohortId,
                                 strataTable,
                                 minNumPatterns = 10L,
                                 outputFolder) {



  #create directory if it doesnt exist
  cohortPath <- paste("cohort", cohortId, sep = "_")
  outputFolder <- fs::path(outputFolder, executionSettings$databaseId, cohortPath)
  fs::dir_create(outputFolder)


  strataNames <- strataTable %>% dplyr::distinct(nm) %>% dplyr::pull()

  patterns <- treatmentHistory %>%
    dplyr::left_join(strataTable, by = c("person_id" = "subject_id"), multiple = "all",
                     relationship = "many-to-many") %>%
    dplyr::group_by(strata_id, strata) %>%
    dplyr::group_split() %>%
    purrr::map(~prepSankey(.x, minNumPatterns = minNumPatterns)) %>%
    purrr::set_names(nm = strataNames)

  # Save output
  save_path <- fs::path(outputFolder, "treatmentPatterns.rds")
  readr::write_rds(patterns, file = save_path)
  cli::cat_line("\nTreatment Patterns run at: ", Sys.time())
  cli::cat_line("\nSaved to: ", save_path)

  return(patterns)
}


